
C:\Users\tomde\AppData\Local\Temp\arduino\sketches\4B2B2DB2748FD3CB713EB84C0453CE8C/BMWI3BMS.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
000157a8 l    d  .fini	00000000 .fini
1fff8000 l    d  .usbdescriptortable	00000000 .usbdescriptortable
1fff8200 l    d  .dmabuffers	00000000 .dmabuffers
1fff83bc l    d  .usbbuffers	00000000 .usbbuffers
1fff8720 l    d  .data	00000000 .data
1fff9170 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 mk20dx128.c
00009af0 l     F .text	0000000c startup_default_early_hook
00009afc l     F .text	00000002 startup_default_late_hook
00000000 l    df *ABS*	00000000 crtstuff.c
00000410 l     F .text	00000000 register_tm_clones
00000434 l     F .text	00000000 frame_dummy
1fff9170 l     O .bss	00000000 object.0
00015798 l     O .text	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 BMSModule.cpp
00000000 l    df *ABS*	00000000 BMSModuleManager.cpp
00000000 l    df *ABS*	00000000 BMWI3BMS.ino.cpp
000015a0 l     F .text	00000054 long map<unsigned short, int, int, int, int>(unsigned short, int, int, int, int, std::enable_if<std::is_integral<unsigned short>::value, void>::type*) [clone .isra.0]
000015f4 l     F .text	00000024 Print::println(char const*) [clone .isra.0]
000072c8 l     F .text	00000050 _GLOBAL__sub_I_bms
0000754c l       .text	00000000 L_30974_delayMicroseconds
00014fa4 l     O .text	0000000c finalxor
00000000 l    df *ABS*	00000000 CRC8.cpp
00000000 l    df *ABS*	00000000 Logger.cpp
00000000 l    df *ABS*	00000000 SerialConsole.cpp
00000000 l    df *ABS*	00000000 FlexCAN.cpp
00008578 l     F .text	0000000c _GLOBAL__sub_I_Can0
00000000 l    df *ABS*	00000000 ADC.cpp
00000000 l    df *ABS*	00000000 ADC_Module.cpp
00000000 l    df *ABS*	00000000 SPI.cpp
00008db4 l     F .text	00000038 _GLOBAL__sub_I__Z15_spi_dma_rxISR0v
00000000 l    df *ABS*	00000000 FilterOnePole.cpp
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial2.cpp
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00000000 l    df *ABS*	00000000 Print.cpp
000092a4 l     F .text	00000082 Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 analog.c
1fffd0e4 l     O .bss	00000001 analog_reference_internal
1fffd0e5 l     O .bss	00000001 calibrating
1fff88ec l     O .data	00000001 analog_config_bits
1fff88ed l     O .data	00000001 analog_num_average
00000000 l    df *ABS*	00000000 eeprom.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pins_teensy.c
00009bfc l     F .text	00000002 dummy_isr
1fff8720 l     F .data	00000034 port_E_isr
1fff8754 l     F .data	00000034 port_D_isr
1fff8788 l     F .data	00000034 port_C_isr
1fff87bc l     F .data	00000034 port_B_isr
1fff87f0 l     F .data	00000034 port_A_isr
00009c00 l     F .text	00000044 digitalWrite.part.0
00009d40 l     F .text	00000002 startup_default_middle_hook
1fff88f4 l     O .data	00000001 analog_write_res
000151f4 l     O .text	00000014 CSWTCH.39
00000000 l    df *ABS*	00000000 serial2.c
1fffd0ec l     O .bss	00000004 rts_pin
1fffd0f0 l     O .bss	00000040 rx_buffer
1fffd130 l     O .bss	00000001 rx_buffer_head
1fffd134 l     O .bss	00000004 rx_buffer_storage_
1fffd138 l     O .bss	00000001 rx_buffer_tail
1fffd13c l     O .bss	00000004 transmit_pin
1fffd140 l     O .bss	00000001 transmitting
1fffd144 l     O .bss	00000028 tx_buffer
1fffd16c l     O .bss	00000001 tx_buffer_head
1fffd170 l     O .bss	00000004 tx_buffer_storage_
1fffd174 l     O .bss	00000001 tx_buffer_tail
1fff89d8 l     O .data	00000004 rts_high_watermark_
1fff89dc l     O .data	00000004 rts_low_watermark_
1fff89e0 l     O .data	00000004 rx_buffer_total_size_
1fff89e4 l     O .data	00000001 rx_pin_num
1fff89e8 l     O .data	00000004 tx_buffer_total_size_
1fff89ec l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serial3.c
0000abe8 l     F .text	000000ec serial3_putchar.part.0
1fffd178 l     O .bss	00000004 rts_pin
1fffd17c l     O .bss	00000040 rx_buffer
1fffd1bc l     O .bss	00000001 rx_buffer_head
1fffd1c0 l     O .bss	00000004 rx_buffer_storage_
1fffd1c4 l     O .bss	00000001 rx_buffer_tail
1fffd1c8 l     O .bss	00000004 transmit_pin
1fffd1cc l     O .bss	00000001 transmitting
1fffd1d0 l     O .bss	00000028 tx_buffer
1fffd1f8 l     O .bss	00000001 tx_buffer_head
1fffd1fc l     O .bss	00000004 tx_buffer_storage_
1fffd200 l     O .bss	00000001 tx_buffer_tail
1fff89f0 l     O .data	00000004 rts_high_watermark_
1fff89f4 l     O .data	00000004 rts_low_watermark_
1fff89f8 l     O .data	00000004 rx_buffer_total_size_
1fff89fc l     O .data	00000004 tx_buffer_total_size_
1fff8a00 l     O .data	00000001 tx_pin_num
00000000 l    df *ABS*	00000000 serialEvent2.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 usb_dev.c
1fffd204 l     O .bss	00000040 ep0_rx0_buf
1fffd244 l     O .bss	00000040 ep0_rx1_buf
1fffd284 l     O .bss	00000001 ep0_tx_bdt_bank
1fffd285 l     O .bss	00000001 ep0_tx_data_toggle
1fffd286 l     O .bss	00000002 ep0_tx_len
1fffd288 l     O .bss	00000004 ep0_tx_ptr
1fffd28c l     O .bss	00000008 reply_buffer
1fffd294 l     O .bss	00000010 rx_first
1fffd2a4 l     O .bss	00000010 rx_last
1fffd2b4 l     O .bss	00000008 setup
1fffd2bc l     O .bss	00000010 tx_first
1fffd2cc l     O .bss	00000010 tx_last
1fffd2dc l     O .bss	00000004 tx_state
1fff8000 l     O .usbdescriptortable	000000a0 table
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_mem.c
1fff8a14 l     O .data	00000004 usb_buffer_available
00000000 l    df *ABS*	00000000 usb_serial.c
1fffd2f0 l     O .bss	00000004 rx_packet
1fffd2f4 l     O .bss	00000001 transmit_previous_timeout
1fffd2f5 l     O .bss	00000001 tx_noautoflush
1fffd2f8 l     O .bss	00000004 tx_packet
00000000 l    df *ABS*	00000000 yield.cpp
1fffd30d l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
1fff8a1c l     O .data	00000043 config_descriptor
1fff8a60 l     O .data	00000012 device_descriptor
00000000 l    df *ABS*	00000000 libm_a-wf_exp.o
00000000 l    df *ABS*	00000000 libm_a-sf_finite.o
00000000 l    df *ABS*	00000000 libm_a-ef_exp.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
0000c428 l     F .text	00000012 with_errnof
0000c43c l     F .text	00000026 xflowf
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_addsubsf3.o
00000000 l    df *ABS*	00000000 _arm_muldivsf3.o
00000000 l    df *ABS*	00000000 _arm_cmpsf2.o
00000000 l    df *ABS*	00000000 _arm_fixsfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunssfsi.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0000d8fc l     F .text	00000018 stdio_exit_handler
0000d914 l     F .text	00000040 cleanup_stdio
0000d954 l     F .text	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
0000dfdc l     F .text	00000014 register_fini
00000000 l    df *ABS*	00000000 libc_a-atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fini.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00010ab0 l     F .text	00000128 quorem
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00011c20 l     F .text	00000076 __sprint_r.part.0
00012c1c l     F .text	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
0000868c g     F .text	00000004 ADC_Module::getMaxValue()
1fff9194 g     O .bss	00000004 Charged
000058a0 g     F .text	000000ac outputdebug()
00009ae8  w    F .text	00000006 adc0_isr
00001618 g     F .text	0000017c loadSettings()
0000c8fc g     F .text	0000002c .hidden __aeabi_dcmpun
0000bd60 g     F .text	0000002c usb_serial_available
0000351c g     F .text	00001e38 menu()
1fffcde4 g     O .bss	00000004 pilottimer
00013434 g     F .text	00000024 _isatty_r
0000c8c0 g     F .text	00000012 .hidden __aeabi_dcmple
0000c7fc g     F .text	0000007a .hidden __cmpdf2
00009b9c g     F .text	00000004 operator new[](unsigned int)
0000ddc0 g     F .text	0000002c _lseek_r
0000bfd0  w    F .text	000000f0 yield
0000916c  w    F .text	0000000c HardwareSerial3::write(unsigned char)
0000c7fc g     F .text	0000007a .hidden __eqdf2
1fff8a78 g     O .data	00000018 usb_string_manufacturer_name_default
0000c790 g     F .text	0000005a .hidden __floatdidf
00009aa4  w    F .text	00000044 hard_fault_isr
00009134 g     F .text	0000002c HardwareSerial3::begin(unsigned long)
00009ae8  w    F .text	00000006 dma_ch6_isr
0000076c g     F .text	00000006 BMSModule::getCUVCells()
1fffd494 g     O .bss	00000001 __lock___atexit_recursive_mutex
00008c68  w    F .text	0000013c SPIClass::dma_rxisr()
00011a90 g     F .text	0000004c _wcrtomb_r
00002b64 g     F .text	00000180 calcur()
0000af8c g     F .text	00000014 serial3_putchar
00009338 g     F .text	0000001c Print::println()
00000a84 g     F .text	00000044 BMSModuleManager::seriescells()
0000a8c4 g     F .text	00000028 serial2_available
0000db68 g     F .text	00000020 __sseek
0000da28 g     F .text	0000003c __sinit
00009ae8  w    F .text	00000006 uart0_lon_isr
0000b32c g     F .text	00000080 usb_rx_memory
00013358 g     F .text	000000b0 __swbuf_r
00009064  w    F .text	00000008 HardwareSerial2::setTX(unsigned char, bool)
1fffcbc4 g     O .bss	00000004 conttimer1
00009ae8  w    F .text	00000006 dma_ch8_isr
00008198 g     F .text	000000e6 FlexCAN::write(CAN_message_t const&)
00008b34 g     F .text	00000072 ADC_Module::setAveraging(unsigned char)
0000d518 g     F .text	0000000c __malloc_unlock
1fff88f8 g     O .data	00000038 isr_table_portA
00009224  w    F .text	00000020 HardwareSerial3::write(int)
000080b8 g     F .text	000000e0 FlexCAN::writeTxRegisters(CAN_message_t const&, unsigned char)
0000a410 g     F .text	000000d0 serial2_end
00009600 g     F .text	000000c8 analog_init
0000288c g     F .text	000000e4 Prechargecon()
0000b3ac g     F .text	00000088 usb_tx
0000ccec g     F .text	00000136 .hidden __divsf3
1fffcdd8 g     O .bss	00000004 outputcheck
00009ae8  w    F .text	00000006 portcd_isr
00008a58 g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
00009704 g     F .text	0000006c eeprom_initialize
1fffcee0 g     O .bss	00000004 x
000091b0  w    F .text	00000004 HardwareSerial3::clear()
0000db90 g     F .text	000000f8 memmove
1fff8870 g     O .data	00000004 pwmcurmax
1fffcd0c g     O .bss	00000004 lasttime
000079cc g     F .text	0000001c Logger::console(char*, ...)
000008b0 g     F .text	00000054 BMSModule::getAvgTemp()
1fffcde8 g     O .bss	00000002 pwmcurmin
0000e2d4 g     F .text	0000004c _Balloc
1fffcd3c g     O .bss	00000004 menuload
00009ae8  w    F .text	00000006 can1_rx_warn_isr
000157ac g       .fini	00000000 __exidx_end
00000458 g     F .text	00000074 BMSModule::BMSModule()
0000cf10 g     F .text	0000004c .hidden __fixsfsi
00009ae8  w    F .text	00000006 dma_error_isr
1fffd0dc g     O .bss	00000001 EventResponder::runningFromYield
00009ae8  w    F .text	00000006 i2c0_isr
1fffcef0 g     O .bss	00000004 whichDisplay
0000c7ec g     F .text	0000008a .hidden __gtdf2
1fff916c g     O .data	00000004 __atexit_recursive_mutex
00008a58 g     F .text	00000034 ADC_Module::ADC_Module(unsigned char, unsigned char const*, ADC_Module::ADC_NLIST const*, ADC_settings::ADC_REGS_t&)
000009a8 g     F .text	00000006 BMSModule::setTempOff(short)
0000de68 g     F .text	0000000c __errno
1fffcb58 g     O .bss	00000001 commscount
00009178  w    F .text	00000018 HardwareSerial3::write(char const*)
00009ae8  w    F .text	00000006 portd_isr
00009ae8  w    F .text	00000006 enet_error_isr
1fffd0d8 g     O .bss	00000004 EventResponder::firstInterrupt
000009b0 g     F .text	00000064 BMSModuleManager::BMSModuleManager()
1fffcd14 g     O .bss	00000004 looptime1
0000907c  w    F .text	00000004 HardwareSerial2::end()
1fffd48c g     O .bss	00000004 __stdio_exit_handler
0000906c  w    F .text	00000006 HardwareSerial2::setRX(unsigned char)
00009ae8  w    F .text	00000006 tpm1_isr
0000bc48  w    F .text	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
1fffcb44 g     O .bss	00000004 chargecurrent
00013408 g     F .text	0000002c _fstat_r
00015208 g     O .text	00000110 digital_pin_to_info_PGM
00000754 g     F .text	00000006 BMSModule::getFaults()
1fffd490 g     O .bss	00000004 errno
1fffcdec g     O .bss	000000d8 settings
00006048 g     F .text	00000220 sendcommand()
000157ac g       .fini	00000000 _etext
00008da4 g     F .text	00000010 _spi_dma_rxISR0()
1fff9170 g       .bss	00000000 _sbss
0000c888 g     F .text	00000010 .hidden __aeabi_cdcmple
1fff91dc g     O .bss	00000004 balancetimer
1fffcb4c g     O .bss	00000004 chargerendbulk
1fffced4 g     O .bss	00000004 voltage1
0000c974 g     F .text	00000160 .hidden __aeabi_fadd
1fffcdd4 g     O .bss	00000001 nextmes
0000c970 g     F .text	00000164 .hidden __subsf3
00000e24 g     F .text	00000004 BMSModuleManager::setBalIgnore(bool)
0000a12c g     F .text	0000001c digitalRead
00009ae8  w    F .text	00000006 porte_isr
1fff8834 g     O .data	00000008 bmsmanu
00006534 g     F .text	00000d5c loop
00009ae8  w    F .text	00000006 portb_isr
00007b28 g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
00009ae8  w    F .text	00000006 spi1_isr
000009a0 g     F .text	00000006 BMSModule::setIgnoreCell(float)
00009ae8  w    F .text	00000006 uart3_status_isr
00009ae8  w    F .text	00000006 mcm_isr
000090b4  w    F .text	00000020 HardwareSerial2::write(int)
00009220  w    F .text	00000004 HardwareSerial3::availableForWrite()
1fffd0d4 g     O .bss	00000004 EventResponder::lastInterrupt
0000aa0c g     F .text	00000184 uart1_status_isr
0000a518 g     F .text	0000007c serial2_set_tx
000098fc g     F .text	000001a6 memcpy
00009ae8  w    F .text	00000006 randnum_isr
0000a9c4 g     F .text	00000048 serial2_clear
0000c878 g     F .text	00000020 .hidden __aeabi_cdrcmple
1fff9170 g     O .data	00000000 .hidden __TMC_END__
0000cefc g     F .text	00000012 .hidden __aeabi_fcmpgt
00000e20 g     F .text	00000004 BMSModuleManager::getPackVoltage()
0000ea4c g     F .text	00001ba4 _svfprintf_r
0000c718 g     F .text	00000022 .hidden __floatsidf
00000e28 g     F .text	00000004 BMSModuleManager::setPstrings(int)
000077b8 g     F .text	00000002 CRC8::CRC8()
1fff8980 g     O .data	00000030 isr_table_portC
1fff8878 g     O .data	00000002 pwmfreq
1fffd0e8 g     O .bss	00000004 systick_millis_count
0000c7f4 g     F .text	00000082 .hidden __ltdf2
00009aa4  w    F .text	00000044 bus_fault_isr
00005cac g     F .text	0000035c chargercomms()
000091d4  w    F .text	00000008 HardwareSerial3::setTX(unsigned char, bool)
00009ae8  w    F .text	00000006 watchdog_isr
00009b54 g     F .text	00000044 nvic_execution_priority
00009ae8  w    F .text	00000006 i2c1_isr
1fffd2e0 g     O .bss	00000001 usb_configuration
1fff91e4 g     O .bss	00003954 bms
00007b20 g     F .text	00000004 CANListener::frameHandler(CAN_message_t&, int, unsigned char)
00009ae8  w    F .text	00000006 dma_ch11_isr
00008ff0  w    F .text	0000000c HardwareSerial2::write9bit(unsigned long)
00009114  w    F .text	00000020 HardwareSerial2::write(unsigned int)
0000b2b4  w    F .text	00000002 serialEvent2()
1fff8848 g     O .data	00000004 chargerid2
00009ae8  w    F .text	00000006 i2c2_isr
00009de8 g     F .text	00000224 analogWrite
1fff8a78  w    O .data	00000018 usb_string_manufacturer_name
1fffd2e4 g     O .bss	00000008 usb_rx_byte_count_data
00009ae8  w    F .text	00000006 pit1_isr
0000cf9c g     F .text	00000010 malloc
00009ae8  w    F .text	00000006 dma_ch4_isr
00009ae8  w    F .text	00000006 software_isr
0000a4e0 g     F .text	00000038 serial2_set_transmit_pin
00008e80 g     F .text	00000068 FilterOnePole::input(float)
00009b38  w    F .text	0000000a _fstat
00009ae8  w    F .text	00000006 dma_ch7_isr
00001794 g     F .text	00000128 alarmupdate()
00008dec g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
000109f8 g     F .text	00000040 __assert_func
00008c50  w    F .text	00000016 EventResponder::triggerEvent(int, void*)
0000cadc g     F .text	0000001c .hidden __aeabi_i2f
00015590 g     O .text	000000c8 __mprec_tens
0000bba8 g     F .text	00000088 usb_init
00000894 g     F .text	0000001a BMSModule::getHighTemp()
0000ce2c g     F .text	00000066 .hidden __lesf2
000053dc g     F .text	000000b4 CAB500()
0000ae08 g     F .text	0000006c serial3_end
0000c928 g     F .text	00000040 .hidden __fixunsdfsi
00009ae8  w    F .text	00000006 lptmr_isr
00000f48 g     F .text	0000004e BMSModuleManager::getAvgCellVolt()
1fffd350 g     O .bss	00000004 __malloc_top_pad
00009d2c g     F .text	00000014 rtc_set
1fffcef4 g     O .bss	0000019c Can0
000091e4  w    F .text	00000006 HardwareSerial3::transmitterEnable(unsigned char)
1fff9170 g       .bss	00000000 __bss_start__
000088c0 g     F .text	00000090 ADC_Module::setResolution(unsigned char)
0000c6f8 g     F .text	0000001e .hidden __aeabi_ui2d
000012f8 g     F .text	0000024c BMSModuleManager::printAllCSV(unsigned long, float, int)
0001082c g     F .text	00000008 _localeconv_r
0000a374 g     F .text	0000009c serial2_format
00000500 g     F .text	0000004c BMSModule::decodetemp(CAN_message_t&, int)
00012c9c g     F .text	000002e8 __sfvwrite_r
0000e474 g     F .text	0000005c __i2b
00015108 g     O .text	00000068 vtable for HardwareSerial2
0000b038 g     F .text	0000008c serial3_getchar
1fff8720 g       .data	00000000 _sdata
0000c474 g     F .text	00000000 .hidden __aeabi_drsub
0000c1d4 g     F .text	00000010 finitef
0000de18 g     F .text	00000024 _sbrk_r
00000774 g     F .text	0000000c BMSModule::getCellVoltage(int)
000091c4  w    F .text	00000010 HardwareSerial3::attachRts(unsigned char)
000001bc g     F .text	000001c8 ResetHandler
0000abc8 g     F .text	00000020 serial2_add_memory_for_write
1fffcec4 g     O .bss	00000004 storagemode
0000bce8 g     F .text	00000048 usb_serial_getchar
00009ae8  w    F .text	00000006 can1_bus_off_isr
00005490 g     F .text	00000344 currentlimit()
00007da0 g     F .text	00000062 FlexCAN::setMask(unsigned long, unsigned char)
00009ae8  w    F .text	00000006 ftm2_isr
1fffd2fc g     O .bss	00000008 usb_cdc_line_coding
000077bc g     F .text	00000036 CRC8::begin()
0000a0e0 g     F .text	0000004c digitalWrite
00009ae8  w    F .text	00000006 uart5_status_isr
00009ae8  w    F .text	00000006 lpuart0_status_isr
1fffd0e0 g     O .bss	00000004 EventResponder::lastYield
00015034 g     O .text	0000002c ADC::channel2sc1aADC0
00000878 g     F .text	0000001a BMSModule::getLowTemp()
0000ddec g     F .text	0000002c _read_r
00015394 g     O .text	00000004 usb_endpoint_config_table
00009ae8  w    F .text	00000006 dma_ch9_isr
1fffcd44 g     O .bss	00000010 msg
00009ae8  w    F .text	00000006 pit2_isr
0000a298 g     F .text	000000dc serial2_begin
0000c8ac g     F .text	00000012 .hidden __aeabi_dcmplt
0000b010 g     F .text	00000028 serial3_available
000105f0 g     F .text	000000c6 _fclose_r
1fffd348 g     O .bss	00000004 __malloc_max_sbrked_mem
00009040  w    F .text	00000004 HardwareSerial2::clear()
0000a148 g     F .text	00000078 pinMode
1fffcd08 g     O .bss	00000004 lastUpdate
0000bc98 g     F .text	00000050 usb_free
00009380 g     F .text	000001c0 Print::printFloat(double, unsigned char)
00009ae8  w    F .text	00000006 i2c3_isr
0000c73c g     F .text	00000042 .hidden __extendsfdf2
1fffcd54 g     O .bss	00000080 msgString
000136ac g     F .text	000001d0 .hidden __aeabi_ddiv
1fffcbd0 g     O .bss	00000100 crc8
1fffcd18 g     O .bss	00000020 lowpassFilter
1fff8850 g     O .data	00000004 debug
0000c480 g     F .text	00000276 .hidden __adddf3
0000ce34 g     F .text	0000005e .hidden __nesf2
0000a674 g     F .text	000000f8 serial2_putchar
00000c04 g     F .text	00000188 BMSModuleManager::getAllVoltTemp()
000090a8  w    F .text	00000004 HardwareSerial2::available()
0000a8ec g     F .text	0000008c serial2_getchar
0000054c g     F .text	00000208 BMSModule::decodecan(int, CAN_message_t&, int)
000157ac g       .fini	00000000 __exidx_start
00013458 g     F .text	00000254 .hidden __aeabi_dmul
00009ae8  w    F .text	00000006 pit0_isr
00009190  w    F .text	00000010 HardwareSerial3::write(unsigned char const*, unsigned int)
00009b44  w    F .text	00000004 _isatty
1fffd0d0 g     O .bss	00000004 EventResponder::firstYield
00008950 g     F .text	00000108 ADC_Module::analog_init()
1fff8880 g     O .data	00000001 Logger::logLevel
1fffccec g     O .bss	00000010 inMsg
00009244  w    F .text	00000020 HardwareSerial3::write(unsigned long)
00009ae8  w    F .text	00000006 can1_error_isr
0000d524 g     F .text	000003d8 _realloc_r
00000988 g     F .text	00000006 BMSModule::settempsensor(int)
0000de74 g     F .text	00000048 __libc_init_array
1fffd634 g       .bss	00000000 __bss_end
00008574 g     F .text	00000002 can0_wakeup_isr
1fffcb48 g     O .bss	00000004 chargerend
00009008  w    F .text	00000018 HardwareSerial2::write(char const*)
00009ae8  w    F .text	00000006 flash_cmd_isr
00009020  w    F .text	00000010 HardwareSerial2::write(unsigned char const*, unsigned int)
0000acd4 g     F .text	00000098 serial3_begin
000130fc g     F .text	00000066 _fputwc_r
00015568 g     O .text	00000028 __mprec_bigtens
00009b50  w    F .text	00000002 abort
0000bc30  w    F .text	00000004 usb_serial_class::clear()
0000c6f8 g     F .text	0000001e .hidden __floatunsidf
0000b134 g     F .text	00000128 uart2_status_isr
00009b00  w    F .text	0000002c _sbrk
0000e7dc g     F .text	0000003e __mcmp
00000980 g     F .text	00000006 BMSModule::isReset()
00009c44 g     F .text	000000e8 attachInterrupt
1fff88f0 g     O .data	00000004 __brkval
1fffd304 g     O .bss	00000001 usb_cdc_line_rtsdtr
0000bf88 g     F .text	00000048 usb_serial_flush_callback
0000594c g     F .text	00000360 dashupdate()
1fffcbc8 g     O .bss	00000004 conttimer2
00009080  w    F .text	00000020 HardwareSerial2::begin(unsigned long, unsigned long)
00015788 g     F .text	00000000 _init
1fff91cc g     O .bss	00000004 alarm
0000c1e4 g     F .text	00000244 __ieee754_expf
1fffcb38 g     O .bss	00000001 bmsstatus
0000afa0 g     F .text	00000028 serial3_write
000091a0  w    F .text	00000008 HardwareSerial3::addMemoryForWrite(void*, unsigned int)
00009ae8  w    F .text	00000006 svcall_isr
000097a4 g     F .text	0000004c eeprom_write_byte
00009ae8  w    F .text	00000006 dma_ch15_isr
00007aa4 g     F .text	00000028 Logger::info(char*, ...)
00000f40 g     F .text	00000004 BMSModuleManager::getHighTemperature()
0000c970 g     F .text	00000164 .hidden __aeabi_fsub
00007824 g     F .text	0000000c Logger::setLoglevel(Logger::LogLevel)
00009ae8  w    F .text	00000006 uart1_error_isr
00010834 g     F .text	00000028 __libc_fini_array
0000a00c g     F .text	000000d4 analogWriteFrequency
00009ae8  w    F .text	00000006 usbhs_phy_isr
1fffcd38 g     O .bss	00000004 mainconttimer
1fffd634 g       .bss	00000000 _ebss
1fff88d8 g     O .data	00000014 Serial3
00007cd0 g     F .text	00000084 FlexCAN::setFilter(CAN_filter_t const&, unsigned char)
1fff885c g     O .data	00000004 firmver
1fffcd40 g     O .bss	00000001 mescycle
000091ec  w    F .text	00000004 HardwareSerial3::end()
1fff91e0 g     O .bss	00000004 balpauzecnt
1fffcb5c g     O .bss	00000060 console
0000e3d4 g     F .text	00000040 __hi0bits
00008584 g     F .text	0000005c ADC::ADC()
0000cee8 g     F .text	00000012 .hidden __aeabi_fcmpge
0001387c g     F .text	0000004e .hidden __fixdfsi
00009038  w    F .text	00000008 HardwareSerial2::addMemoryForRead(void*, unsigned int)
00009ae8 g     F .text	00000006 unused_isr
000091b4  w    F .text	00000010 HardwareSerial3::attachCts(unsigned char)
00006008 g     F .text	00000040 getcheck(CAN_message_t&, int)
00009ae8  w    F .text	00000006 spi0_isr
0000b25c g     F .text	00000038 serial3_add_memory_for_read
1fffd498 g     O .bss	00000001 __lock___malloc_recursive_mutex
00009214  w    F .text	00000004 HardwareSerial3::read()
0000cb08 g     F .text	0000007c .hidden __floatdisf
00009ae8  w    F .text	00000006 dma_ch3_isr
1fff918c g     O .bss	00000001 CPdebug
1fffcbbc g     O .bss	00000004 contctrl
1fffd354 g     O .bss	00000138 __sf
000062e4 g     F .text	00000250 canread()
0000ce24 g     F .text	0000006e .hidden __gtsf2
00009ae8  w    F .text	00000006 flash_error_isr
0000c480 g     F .text	00000276 .hidden __aeabi_dadd
1fff91c4 g     O .bss	00000002 accurlim
0000c7f4 g     F .text	00000082 .hidden __ledf2
00000870 g     F .text	00000006 BMSModule::getbalstat()
0000ced4 g     F .text	00000012 .hidden __aeabi_fcmple
00009ae8  w    F .text	00000006 uart5_error_isr
00009ae8  w    F .text	00000006 rtc_seconds_isr
0001508c g     O .text	00000078 SPIClass::spi0_hardware
00009ae8  w    F .text	00000006 pdb_isr
0000e62c g     F .text	000000c0 __pow5mult
0000c780 g     F .text	0000006a .hidden __aeabi_ul2d
00009aa4  w    F .text	00000044 usage_fault_isr
00009ae8  w    F .text	00000006 dac1_isr
00000000 g     O .text	000001bc _VectorsFlash
00009ae8  w    F .text	00000006 dma_ch14_isr
1fffcd10 g     O .bss	00000004 looptime
1fffcd04 g     O .bss	00000004 inputcheck
1fffd308 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000c0c0 g     F .text	00000050 HardwareSerial::addToSerialEventsList()
00008fb4 g     F .text	00000010 systick_isr
0000afc8 g     F .text	00000018 serial3_flush
00009ae8  w    F .text	00000006 rtc_alarm_isr
0000dec8 g     F .text	00000002 __retarget_lock_release_recursive
1fff91b4 g     O .bss	00000004 SOCreset
00009054  w    F .text	00000010 HardwareSerial2::attachRts(unsigned char)
00009ae8  w    F .text	00000006 dma_ch2_isr
1fff8a04 g     O .data	00000010 Serial
1fff8858 g     O .data	00000004 filterFrequency
00009ae8  w    F .text	00000006 ftm1_isr
0000c464 g     F .text	00000008 .hidden __math_uflowf
0000bc50  w    F .text	00000006 usb_serial_class::write(unsigned char)
0000ae74 g     F .text	00000038 serial3_set_transmit_pin
00009af0  w    F .text	0000000c startup_early_hook
00009ae8  w    F .text	00000006 dma_ch13_isr
1fffcee4 g     O .bss	00000004 Logger::lastLogTime
000090ac  w    F .text	00000004 HardwareSerial2::flush()
1fff9188 g     O .bss	00000004 CANmilliamps
00009ae8  w    F .text	00000006 uart2_error_isr
0000bd30 g     F .text	00000030 usb_serial_peekchar
0000c8e8 g     F .text	00000012 .hidden __aeabi_dcmpgt
1fff8860 g     O .data	00000004 maxac1
0000b294 g     F .text	00000020 serial3_add_memory_for_write
0000da64 g     F .text	0000000c __sfp_lock_acquire
00010860 g     F .text	00000000 memchr
0000af04 g     F .text	00000002 serial3_set_rx
1fffd634 g       .bss	00000000 __bss_end__
1fff8aa8 g     O .data	00000016 usb_string_serial_number_default
00009aa4 g     F .text	00000044 fault_isr
0000e09c g     F .text	0000020c _free_r
0000dd90 g     F .text	0000000c __locale_mb_cur_max
00011adc g     F .text	0000001a _wcsrtombs_r
0000c8d4 g     F .text	00000012 .hidden __aeabi_dcmpge
00009ae8  w    F .text	00000006 usb_charge_isr
1fffcb54 g     O .bss	00000004 commandtime
1fffd4a4 g     O .bss	00000190 __atexit0
0000bc40  w    F .text	00000004 usb_serial_class::flush()
1fff91a8 g     O .bss	00000004 Pretimer1
00009ae8  w    F .text	00000006 cmt_isr
0000c47c g     F .text	0000027a .hidden __aeabi_dsub
00009ae8  w    F .text	00000006 usbhs_isr
00008dec g     F .text	0000003c FilterOnePole::FilterOnePole(FILTER_TYPE, float, float)
1fff8ec8 g     O .data	00000004 __malloc_sbrk_base
1fffccdc g     O .bss	00000002 duration
0000bc38  w    F .text	00000004 usb_serial_class::read()
00009ae8  w    F .text	00000006 ftm3_isr
1fff9198 g     O .bss	00000004 Discharge
000057d4 g     F .text	000000cc inputdebug()
00000970 g     F .text	00000006 BMSModule::getError()
00009ae8  w    F .text	00000006 tsi0_isr
0000c780 g     F .text	0000006a .hidden __floatundidf
00009b48  w    F .text	00000006 _lseek
0000e6ec g     F .text	000000f0 __lshift
00009ae8  w    F .text	00000006 spi2_isr
1fff8830 g     O .data	00000004 balstop
1fff883c g     O .data	00000008 bmsname
0000cadc g     F .text	0000001c .hidden __floatsisf
00011b20 g     F .text	00000100 __ssprint_r
0000c110  w    F .text	00000002 serialEvent()
1fffd2e1 g     O .bss	00000001 usb_reboot_timer
00010970 g     F .text	00000088 __register_exitproc
00008ba8 g     F .text	00000018 ADC_Module::checkPin(unsigned char)
00009770 g     F .text	00000034 eeprom_read_byte
1fffced8 g     O .bss	00000004 voltage2
0000bd8c g     F .text	00000038 usb_serial_flush_input
1fffcce0 g     O .bss	00000008 filter
0000e4d0 g     F .text	0000015c __multiply
1fff89d0 g     O .data	00000008 isr_table_portE
0000becc g     F .text	0000001a usb_serial_putchar
00000021 g       *ABS*	00000000 _teensy_model_identifier
1fffcec8 g     O .bss	00000001 testcycle
1fff91c8 g     O .bss	00000004 adc
0000cf10 g     F .text	0000004c .hidden __aeabi_f2iz
0000dd2c g     F .text	00000064 strncpy
1fffd320 g     O .bss	00000028 __malloc_current_mallinfo
1fff91ac g     O .bss	00000004 RawCur
0000ce34 g     F .text	0000005e .hidden __eqsf2
0000e970 g     F .text	000000c0 __d2b
1fffd310 g     O .bss	0000000c HardwareSerial::s_serials_with_serial_events
0000855c g     F .text	00000002 can0_bus_off_isr
0000a76c g     F .text	00000110 serial2_write
0000075c g     F .text	00000006 BMSModule::getAlerts()
00008ffc  w    F .text	0000000c HardwareSerial2::write(unsigned char)
000090d4  w    F .text	00000020 HardwareSerial2::write(unsigned long)
00000a14 g     F .text	0000003c BMSModuleManager::checkcomms()
0000a894 g     F .text	00000030 serial2_write_buffer_free
1fff8826 g     O .data	00000002 ChargerEff
1fffd2ec g     O .bss	00000001 usb_rx_memory_needed
0000b434 g     F .text	00000774 usb_isr
1fff91a4 g     O .bss	00000004 Pretimer
0000ccec g     F .text	00000136 .hidden __aeabi_fdiv
0000dd9c g     F .text	00000024 _close_r
0000c718 g     F .text	00000022 .hidden __aeabi_i2d
000095f8 g     F .text	00000006 Stream::parseInt()
00007acc g     F .text	00000028 Logger::error(char*, ...)
00002970 g     F .text	000001f4 contcon()
1fffd098 g     O .bss	00000038 SPI
00007b28 g     F .text	00000078 FlexCAN::FlexCAN(unsigned char)
1fff8a02 g     O .data	00000001 _serialEvent3_default
00015318  w    O .text	00000028 vtable for usb_serial_class
00009ae8  w    F .text	00000006 uart3_error_isr
00002ce4 g     F .text	00000838 VEcan()
0000dec0 g     F .text	00000002 __retarget_lock_close_recursive
00015030 g     O .text	00000004 ADC::diff_table_ADC1
1fffcde0 g     O .bss	00000004 overtriptimer
0000caf8 g     F .text	0000008c .hidden __floatundisf
00009540 g     F .text	00000040 Stream::timedPeek()
00000764 g     F .text	00000006 BMSModule::getCOVCells()
00012f84 g     F .text	000000cc __swsetup_r
00009ae8  w    F .text	00000006 porta_isr
1fffcd00 g     O .bss	00000004 incomingByte
000136ac g     F .text	000001d0 .hidden __divdf3
1fff83bc g     O .usbbuffers	00000360 usb_buffer_memory
00007290 g     F .text	00000038 low_voltage_isr
1fff8ac0 g     O .data	00000408 __malloc_av_
0000cad4 g     F .text	00000024 .hidden __aeabi_ui2f
1fffd4a0 g     O .bss	00000004 __atexit
00008560 g     F .text	0000000c can0_error_isr
00009d44 g     F .text	000000a4 _init_Teensyduino_internal_
1fff91b0 g     O .bss	00000004 SOCmem
00013458 g     F .text	00000254 .hidden __muldf3
0000db04 g     F .text	00000022 __sread
0000b110 g     F .text	00000024 serial3_clear
00002488 g     F .text	00000404 updateSOC()
0000bf30 g     F .text	00000058 usb_serial_flush_output
00009ae8  w    F .text	00000006 dma_ch12_isr
0000d50c g     F .text	0000000c __malloc_lock
00009ae8  w    F .text	00000006 can1_wakeup_isr
00000f44 g     F .text	00000004 BMSModuleManager::getLowTemperature()
1fff8200 g     O .dmabuffers	000001bc _VectorsRam
000107d8 g     F .text	00000054 _fflush_r
00010a38 g     F .text	00000078 _calloc_r
00008fc4 g     F .text	0000002c HardwareSerial2::begin(unsigned long)
00009ae8  w    F .text	00000006 pit3_isr
0000ce34 g     F .text	0000005e .hidden __cmpsf2
1fff8a18 g     O .data	00000001 yield_active_check_flags
00009ae8  w    F .text	00000006 enet_rx_isr
0000dec4 g     F .text	00000002 __retarget_lock_acquire_recursive
00009ae8  w    F .text	00000006 portc_isr
0000dc88 g     F .text	000000a4 memset
000098ec g     F .text	00000010 main
1fffd34c g     O .bss	00000004 __malloc_max_total_mem
0000debc g     F .text	00000002 __retarget_lock_init_recursive
0000a978 g     F .text	0000004c serial2_peek
0000cb08 g     F .text	0000007c .hidden __aeabi_l2f
0000a5f0 g     F .text	00000044 serial2_set_rts
00007ba0 g     F .text	000000c8 FlexCAN::setBaudRate(unsigned long)
0000ce2c g     F .text	00000066 .hidden __ltsf2
00009aa4  w    F .text	00000044 memmanage_fault_isr
0000af4c g     F .text	00000040 serial3_set_cts
0000db88 g     F .text	00000008 __sclose
0000c114 g     F .text	00000070 usb_init_serialnumber
000157a8 g       .text	00000000 __init_array_end
000004cc g     F .text	00000032 BMSModule::clearmodule()
00008020 g     F .text	00000096 FlexCAN::read(CAN_message_t&)
00010bd8 g     F .text	00000eb8 _dtoa_r
0000cfac g     F .text	00000560 _malloc_r
1fffd31c g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00009ae8  w    F .text	00000006 debugmonitor_isr
0000ea30 g     F .text	0000001a __ascii_wctomb
0000c790 g     F .text	0000005a .hidden __aeabi_l2d
1fff89b0 g     O .data	00000020 isr_table_portD
0000a634 g     F .text	00000040 serial2_set_cts
00008ee8 g     F .text	00000084 EventResponder::triggerEventNotImmediate()
00000a50 g     F .text	00000034 BMSModuleManager::checkstatus()
00009160  w    F .text	0000000c HardwareSerial3::write9bit(unsigned long)
645d6646 g       *ABS*	00000000 __rtc_localtime
0000a1c0 g     F .text	00000040 micros
1fff91a0 g     O .bss	00000004 OverTime
1fff919c g     O .bss	00000004 ErrorReason
0000caf8 g     F .text	0000008c .hidden __aeabi_ul2f
00009ae8  w    F .text	00000006 cmp1_isr
00009ae8  w    F .text	00000006 ftm0_isr
00009044  w    F .text	00000010 HardwareSerial2::attachCts(unsigned char)
0000ce9c g     F .text	00000010 .hidden __aeabi_cfcmple
1fffcbcc g     O .bss	00000004 conttimer3
0000dffc g     F .text	000000a0 _malloc_trim_r
00013164 g     F .text	000000f8 _wcsnrtombs_l
1fff8a74 g     O .data	00000004 string0
0000bdc4 g     F .text	00000108 usb_serial_write
0000cb84 g     F .text	00000168 .hidden __mulsf3
00009afc  w    F .text	00000002 startup_late_hook
00009210  w    F .text	00000004 HardwareSerial3::peek()
00008e28 g     F .text	00000058 FilterOnePole::output()
0000bc3c  w    F .text	00000004 usb_serial_class::available()
00009284  w    F .text	00000020 HardwareSerial3::write(unsigned int)
00015104  w    O .text	00000001 _serialEvent_default
00000868 g     F .text	00000006 BMSModule::getscells()
0000afe0 g     F .text	00000030 serial3_write_buffer_free
00000b5c g     F .text	000000a8 BMSModuleManager::decodecan(CAN_message_t&, int)
000091f0  w    F .text	00000020 HardwareSerial3::begin(unsigned long, unsigned long)
00009264  w    F .text	00000020 HardwareSerial3::write(long)
1fff8a90  w    O .data	00000016 usb_string_product_name
0000a200 g     F .text	00000098 delay
1fff884c g     O .data	00000002 commandrate
0000c7fc g     F .text	0000007a .hidden __nedf2
00009ae8  w    F .text	00000006 tpm0_isr
00008bfc g     F .text	00000054 ADC_Module::startContinuous(unsigned char)
000157a8 g     F .fini	00000000 _fini
1fff9190 g     O .bss	00000004 CSVdebug
00005354 g     F .text	00000088 CAB300()
0001502c g     O .text	00000004 ADC::diff_table_ADC0
00000d8c g     F .text	0000004c BMSModuleManager::getLowCellVolt()
0000dac4 g     F .text	00000040 sprintf
00009ae8  w    F .text	00000006 i2s0_rx_isr
00009ae8  w    F .text	00000006 uart4_error_isr
00009328 g     F .text	00000010 Print::print(long)
0000dff0 g     F .text	0000000c atexit
00008584 g     F .text	0000005c ADC::ADC()
0000ce24 g     F .text	0000006e .hidden __gesf2
0001325c g     F .text	00000024 _wcsnrtombs_r
0000de3c g     F .text	0000002c _write_r
0000c968 g     F .text	0000016c .hidden __aeabi_frsub
00000e74 g     F .text	000000cc BMSModuleManager::getAvgTemperature()
1fffccd8 g     O .bss	00000004 discurrent
00008550 g     F .text	0000000c can0_message_isr
00000e2c g     F .text	00000048 BMSModuleManager::setSensors(int, float, int)
1fff9168 g     O .data	00000004 _impure_ptr
00009ae8  w    F .text	00000006 can1_message_isr
0000ceac g     F .text	00000012 .hidden __aeabi_fcmpeq
000106b8 g     F .text	0000011e __sflush_r
00009ae8  w    F .text	00000006 nmi_isr
00000904 g     F .text	00000050 BMSModule::getModuleVoltage()
000090a0  w    F .text	00000004 HardwareSerial2::peek()
0000cb84 g     F .text	00000168 .hidden __aeabi_fmul
00000964 g     F .text	0000000a BMSModule::setAddress(int)
0000da7c g     F .text	00000046 _fwalk_sglue
00015794 g       .text	00000000 __preinit_array_end
000087d4 g     F .text	000000ec ADC_Module::wait_for_cal()
0000ce94 g     F .text	00000018 .hidden __aeabi_cfrcmple
00009030  w    F .text	00000008 HardwareSerial2::addMemoryForWrite(void*, unsigned int)
00009ae8  w    F .text	00000006 sdhc_isr
00015170 g     O .text	00000068 vtable for HardwareSerial3
0000921c  w    F .text	00000004 HardwareSerial3::flush()
000007bc g     F .text	0000004c BMSModule::getHighCellV()
00000978 g     F .text	00000006 BMSModule::isExisting()
00000808 g     F .text	00000060 BMSModule::getAverageV()
0000e2a8 g     F .text	0000002a __ascii_mbtowc
00008a8c g     F .text	000000a8 ADC_Module::setSamplingSpeed(ADC_settings::ADC_SAMPLING_SPEED)
00000f98 g     F .text	00000360 BMSModuleManager::printPackDetails(int, int)
00006268 g     F .text	0000007c handleVictronLynx()
00007318 g     F .text	000004a0 setup
00015340 g     O .text	00000054 usb_descriptor_list
0000b2bc g     F .text	00000044 usb_rx
00000780 g     F .text	0000003c BMSModule::getLowCellV()
00008bc0 g     F .text	0000003c ADC_Module::startReadFast(unsigned char)
00009ae8  w    F .text	00000006 dma_ch10_isr
00007830 g     F .text	0000019c Logger::logMessage(char*, std::__va_list)
1fffccd4 g     O .bss	00000004 debugCur
0000c928 g     F .text	00000040 .hidden __aeabi_d2uiz
00009ae8  w    F .text	00000006 uart0_error_isr
1fff887c g     O .data	00000004 sensor
0000831c g     F .text	00000234 FlexCAN::message_isr()
1fff91c0 g     O .bss	00000004 UnderTime
0000bc58 g     F .text	00000040 usb_malloc
00000458 g     F .text	00000074 BMSModule::BMSModule()
0000cec0 g     F .text	00000012 .hidden __aeabi_fcmplt
00009ae8  w    F .text	00000006 i2s0_isr
1fffcedc g     O .bss	00000004 warning
20008000 g       .bss	00000000 _estack
0000bee8 g     F .text	00000048 usb_serial_write_buffer_free
00009ae8  w    F .text	00000006 enet_timer_isr
000085e0 g     F .text	000000aa ADC::startContinuous(unsigned char, signed char)
0000c898 g     F .text	00000012 .hidden __aeabi_dcmpeq
1fff8ed0 g     O .data	0000000c __sglue
00009354  w    F .text	00000014 _write
1fff9170 g       .data	00000000 _edata
1fffcb40 g     O .bss	00000004 cellspresent
00009ae8  w    F .text	00000006 i2s0_tx_isr
00009ae8  w    F .text	00000006 adc1_isr
000077b8 g     F .text	00000002 CRC8::CRC8()
00007e04 g     F .text	000001b8 FlexCAN::begin(unsigned long, CAN_filter_t const&, unsigned char, unsigned char)
00013050 g     F .text	000000ac __fputwc
0000bc44  w    F .text	00000004 usb_serial_class::availableForWrite()
1fffceec g     O .bss	00000001 printPrettyDisplay
00009ae8  w    F .text	00000006 cmp0_isr
00015060 g     O .text	0000002c ADC::channel2sc1aADC1
000079e8 g     F .text	00000098 Logger::log(Logger::LogLevel, char*, std::__va_list)
1fff8874 g     O .data	00000004 pwmcurmid
00007c68 g     F .text	00000066 FlexCAN::setNumTxBoxes(unsigned char)
00009ba0 g     F .text	0000005c ultoa
0000cf5c g     F .text	0000003e .hidden __aeabi_f2uiz
00000998 g     F .text	00000006 BMSModule::setReset(bool)
1fff8864 g     O .data	00000004 maxac2
0000a594 g     F .text	0000005c serial2_set_rx
0000db28 g     F .text	0000003e __swrite
00009b98 g     F .text	00000004 operator new(unsigned int)
00008f6c g     F .text	00000044 EventResponder::runFromInterrupt()
1fff8ecc g     O .data	00000004 __malloc_trim_threshold
0000bc34  w    F .text	00000004 usb_serial_class::peek()
00000954 g     F .text	00000010 BMSModule::getTemperature(int)
1fff8868 g     O .data	00000004 ncharger
00011af8 g     F .text	00000028 fiprintf
00011c98 g     F .text	00000f84 _vfiprintf_r
0000cad4 g     F .text	00000024 .hidden __floatunsisf
1fff91d8 g     O .bss	00000001 balancepauze
0000e81c g     F .text	00000154 __mdiff
00000b08 g     F .text	0000000a BMSModuleManager::getNumModules()
0001387c g     F .text	0000004e .hidden __aeabi_d2iz
00007af4 g     F .text	0000002c SerialConsole::SerialConsole()
000090a4  w    F .text	00000004 HardwareSerial2::read()
1fffd30c g     O .bss	00000001 usb_cdc_transmit_flush_timer
1fffcecc g     O .bss	00000004 undertriptimer
1fff9048 g     O .data	00000120 _impure_data
0000ce9c g     F .text	00000010 .hidden __aeabi_cfcmpeq
0000af08 g     F .text	00000044 serial3_set_rts
000018bc g     F .text	0000017c gaugeupdate()
00009ae8  w    F .text	00000006 pit_isr
0000da70 g     F .text	0000000c __sfp_lock_release
1fffcce8 g     O .bss	00000004 gaugedebug
1fff8a01 g     O .data	00000001 _serialEvent2_default
000096c8 g     F .text	0000003c analogWriteDAC0
00007a80 g     F .text	00000024 Logger::debug(char*, ...)
00007b24 g     F .text	00000002 CANListener::txHandler(int, unsigned char)
000153b0 g     O .text	00000101 _ctype_
00009ae8  w    F .text	00000006 dac0_isr
0000a87c g     F .text	00000018 serial2_flush
1fffcb3c g     O .bss	00000004 candebug
00009b2c  w    F .text	00000004 _read
00015794 g       .text	00000000 __init_array_start
00009ae8  w    F .text	00000006 can1_tx_warn_isr
1fffd090 g     O .bss	00000008 FlexCAN::defaultMask
0000c8fc g     F .text	0000002c .hidden __unorddf2
00000990 g     F .text	00000006 BMSModule::setExists(bool)
0000cf5c g     F .text	0000003e .hidden __fixunssfsi
1fff8884 g     O .data	0000003f bitTimingTable
1fff91bc g     O .bss	00000004 SOCtest
00009074  w    F .text	00000006 HardwareSerial2::transmitterEnable(unsigned char)
00009ae8  w    F .text	00000006 uart0_status_isr
00009ae8  w    F .text	00000006 mcg_isr
0000c184 g     F .text	00000050 expf
0000b0c4 g     F .text	0000004c serial3_peek
00008690 g     F .text	00000142 ADC_Module::setConversionSpeed(ADC_settings::ADC_CONVERSION_SPEED)
1fff886c g     O .data	00000004 pulltime
00009580 g     F .text	00000076 Stream::parseInt(char)
0000ab90 g     F .text	00000038 serial2_add_memory_for_read
00001ee4 g     F .text	000005a4 getcurrent()
00000400 g     O .text	00000010 flashconfigbytes
00000b14 g     F .text	00000048 BMSModuleManager::decodetemp(CAN_message_t&, int, int)
00013280 g     F .text	000000d8 __smakebuf_r
1fff8824 g     O .data	00000002 ACvolt
0000c46c g     F .text	00000008 .hidden __math_oflowf
00007d54 g     F .text	0000004a FlexCAN::getFilter(CAN_filter_t&, unsigned char)
0000df00 g     F .text	000000dc strlen
0000c888 g     F .text	00000010 .hidden __aeabi_cdcmpeq
0000c7ec g     F .text	0000008a .hidden __gedf2
1fff8a90 g     O .data	00000016 usb_string_product_name_default
1fff91d0 g     O .bss	00000004 ampsecond
1fffcbc0 g     O .bss	00000004 contstat
1fff8854 g     O .data	00000004 debugdigits
00009ae8  w    F .text	00000006 dma_ch1_isr
1fff91b8 g     O .bss	00000004 SOCset
000009b0 g     F .text	00000064 BMSModuleManager::BMSModuleManager()
0000b300 g     F .text	0000002c usb_tx_packet_count
000090f4  w    F .text	00000020 HardwareSerial2::write(long)
00007fbc g     F .text	00000064 FlexCAN::available()
1fffccfc g     O .bss	00000004 inbox
00009d40  w    F .text	00000002 startup_middle_hook
0000c73c g     F .text	00000042 .hidden __aeabi_f2d
00009ae8  w    F .text	00000006 dma_ch5_isr
1fff8844 g     O .data	00000004 chargerid1
00008570 g     F .text	00000002 can0_rx_warn_isr
000097f0 g     F .text	000000fc eeprom_write_block
00000ac8 g     F .text	00000040 BMSModuleManager::clearmodules()
00001544 g     F .text	0000005c isrCP()
00009218  w    F .text	00000004 HardwareSerial3::available()
0000856c g     F .text	00000002 can0_tx_warn_isr
00009ae8  w    F .text	00000006 uart4_status_isr
1fff91d4 g     O .bss	00000004 balancecells
0000c47c g     F .text	0000027a .hidden __subdf3
00015794 g       .text	00000000 __preinit_array_start
00007af4 g     F .text	0000002c SerialConsole::SerialConsole()
00008280 g     F .text	0000009a FlexCAN::readRxRegisters(CAN_message_t&, unsigned char)
0000e414 g     F .text	0000005e __lo0bits
000091a8  w    F .text	00000008 HardwareSerial3::addMemoryForRead(void*, unsigned int)
00001a38 g     F .text	000004ac printbmsstat()
00000dd8 g     F .text	00000046 BMSModuleManager::getHighCellVolt()
1fffcddc g     O .bss	00000004 outputstate
0000aeac g     F .text	00000058 serial3_set_tx
0000b2b8  w    F .text	00000002 serialEvent3()
1fffccd0 g     O .bss	00000004 currentact
000077f4 g     F .text	00000030 CRC8::get_crc8(unsigned char const*, int, unsigned char)
00010900 g     F .text	00000070 frexp
00009ae8  w    F .text	00000006 cmp2_isr
0000c974 g     F .text	00000160 .hidden __addsf3
00008fb0 g     F .text	00000004 pendablesrvreq_isr
000090b0  w    F .text	00000004 HardwareSerial2::availableForWrite()
1fff8edc g     O .data	0000016c __global_locale
1fff8930 g     O .data	00000050 isr_table_portB
00009ae8  w    F .text	00000006 wakeup_isr
000091dc  w    F .text	00000006 HardwareSerial3::setRX(unsigned char)
1fffd49c g     O .bss	00000001 __lock___sfp_recursive_mutex
00009ae8  w    F .text	00000006 cmp3_isr
00009368 g     F .text	00000014 Print::printNumber(unsigned long, unsigned char, unsigned char)
0000ad6c g     F .text	0000009c serial3_format
1fff882c g     O .data	00000002 SOH
00009b30  w    F .text	00000006 _close
1fff8828 g     O .data	00000004 SOC
00009ae8  w    F .text	00000006 tpm2_isr
0000e334 g     F .text	000000a0 __multadd
1fffced0 g     O .bss	00000004 value
0000e320 g     F .text	00000012 _Bfree
1fff88c4 g     O .data	00000014 Serial2
00009ae8  w    F .text	00000006 dma_ch0_isr
1fff8aa8  w    O .data	00000016 usb_string_serial_number
1fffcee8 g     O .bss	00000004 prettyCounter
00009ae8  w    F .text	00000006 enet_tx_isr
1fffcb50 g     O .bss	00000004 cleartime


